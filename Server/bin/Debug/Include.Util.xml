<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Include.Util</name>
    </assembly>
    <members>
        <member name="M:Include.Util.Reflection.CreateDelegateType(System.Reflection.MethodInfo)">
            <summary>
            Creates a delegate type at runtime based off method
            </summary>
            <param name="method">Method info of target delegate type</param>
            <returns>New delegate type based off method</returns>
        </member>
        <member name="M:Include.Util.Reflection.Cast``1(System.Delegate)">
            <summary>
            Casts source delegate to type T
            </summary>
            <typeparam name="T">Target delegate type</typeparam>
            <param name="source">Source delegate</param>
            <returns>source casted to type T</returns>
        </member>
        <member name="M:Include.Util.Reflection.Cast(System.Delegate,System.Type)">
            <summary>
            Casts source delegate to type
            </summary>
            <param name="source">Source delegate</param>
            <param name="type">Target delegate type</param>
            <returns>source casted to type</returns>
        </member>
        <member name="M:Include.Util.Reflection.CreateMethod(System.Reflection.MethodInfo)">
            <summary>
            Returns a delegate which can be used to quickly invoke a method info.
            </summary>
            <param name="method">MethodInfo which we'd like to make a fast delegate out of</param>
            <returns>Returns an object based on MethodInfo given. 
            If method was void, returns an Action else Func.
            If the method is non-static, first arg of the delegate is the target object.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Include.Util.Reflection.CreateList(System.Type)" -->
    </members>
</doc>
